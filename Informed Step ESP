#include "OOCSI.h"

// use this if you want the OOCSI-ESP library to manage the connection to the Wifi
// SSID of your Wifi network, the library currently does not support WPA2 Enterprise networks
const char* ssid = "IPhone";
// Password of your Wifi network.
const char* password = "12345678";

// name for connecting with OOCSI (unique handle)
const char* OOCSIName = "Sietse";
// put the adress of your OOCSI server here, can be URL or IP address string
const char* hostserver = "oocsi.id.tue.nl";

// OOCSI reference for the entire sketch
OOCSI oocsi = OOCSI();


//buttons
const int buttonPin1 = 2; // button
int buttonAlone = 0;


const int buttonPin2 = 4; // button
int buttonTogether = 0;


const int buttonPin3 = 16; // button
int buttonBefore = 0;


const int buttonPin4 = 17; // button
int buttonAfter = 0;

// Potentiometer is connected to GPIO 34 (Analog ADC1_CH6)
const int potPin = 34;
int potValue = 0;

//int to determine if person is alone ot together
bool Company = false;

//Int to determine if mood has increased or decreased
int moodBefore = 0;
int moodAfter = 0;

//Int to determine message in script
int moodMessage = 0;

void setup() {
  // put your setup code here, to run once:
  Serial.begin(115200);

  // output OOCSI activity on the built-in LED
  pinMode(LED_BUILTIN, OUTPUT);
  oocsi.setActivityLEDPin(LED_BUILTIN);

  // setting up OOCSI. processOOCSI is the name of the function to call when receiving messages, can be a random function name
  // connect wifi and OOCSI to the server
  oocsi.connect(OOCSIName, hostserver, ssid, password);

  //set buttons as INPUT
  pinMode(buttonPin1, INPUT);
  pinMode(buttonPin2, INPUT);
  pinMode(buttonPin3, INPUT);
  pinMode(buttonPin4, INPUT);
}

void loop() {
  // put your main code here, to run repeatedly:

  //Reading buttons
  buttonAlone = digitalRead(buttonPin1);
  buttonTogether = digitalRead(buttonPin2);
  buttonBefore = digitalRead(buttonPin3);
  buttonAfter = digitalRead(buttonPin4);

  //Determine if Participant has company
  if (buttonAlone == HIGH) {
    Company = false;
  }
  if (buttonTogether == HIGH) {
    Company = true;
  }

  //Send Before messages
  if (buttonBefore == HIGH) {

    Serial.println();
    Serial.println ("=== Before Meal ===");
    
    oocsi.connect(OOCSIName, hostserver, ssid, password);
    
    // Reading potentiometer value Before meal
    moodBefore = map(analogRead(potPin), 0, 4095, 1, 7);
    moodMessage = 0;

    Serial.print ("Mood Before: ");
    Serial.println (moodBefore);

    if (Company == false) {
      Serial.print ("Company: ");
      Serial.print (Company);
      Serial.println (". Alone");
      Serial.print ("moodMessage: ");
      Serial.print (moodMessage);
      Serial.println (". No message before Meal!");

      oocsi.newMessage("SietseChannel");
      oocsi.addString("device_id", "d23bdfe56ad2c4227");
      oocsi.addString("Before/After", "Before");
      oocsi.addString("Company", "Alone");
      oocsi.addInt ("moodValue", moodBefore);
      oocsi.addInt ("moodMessage", 0);
      oocsi.sendMessage();
      oocsi.check();
    }

    if (Company == true) {
      Serial.print ("Company: ");
      Serial.print (Company);
      Serial.println (". Together");
      Serial.print ("moodMessage: ");
      Serial.print (moodMessage);
      Serial.println (". No message before Meal!");

      oocsi.newMessage("SietseChannel");
      oocsi.addString("device_id", "d23bdfe56ad2c4227");
      oocsi.addString("Before/After", "Before");
      oocsi.addString("Company", "Together");
      oocsi.addInt ("moodValue", moodBefore);
      oocsi.addInt ("moodMessage", 0);
      oocsi.sendMessage();
      oocsi.check();
    }

    delay (500);
  }

  //send After Messages)
  if (buttonAfter == HIGH) {

    Serial.println();
    Serial.println ("=== After Meal ===");
    
    oocsi.connect(OOCSIName, hostserver, ssid, password);

    //Reading potentiometer value After meal
    moodAfter = map(analogRead(potPin), 0, 4095, 1, 7);
    //Add +1 to int moodBefore to make formulas easier
    moodBefore++;

    //Eating Alone and mood is eaqual or has decreased
    if (Company == false && moodAfter < moodBefore) {
      moodMessage = 1;

      Serial.print ("Mood After: ");
      Serial.println (moodAfter);
      Serial.print ("Company: ");
      Serial.print (Company);
      Serial.println (". Alone");
      Serial.print ("moodMessage: ");
      Serial.print (moodMessage);
      Serial.println (". Hey, we see that your mood did not improve. Maybe you could invite a friend over for your next meal to improve your mood?");

      oocsi.newMessage("SietseChannel");
      oocsi.addString("device_id", "d23bdfe56ad2c4227");
      oocsi.addString("Before/After", "After");
      oocsi.addString("Company", "Alone");
      oocsi.addInt ("moodValue", moodAfter);
      oocsi.addInt ("moodMessage", 1);
      oocsi.sendMessage();
      oocsi.check();

      delay (500);
    }

    //Eating Alone and mood has improved by 1
    if (Company == false && moodAfter == moodBefore) {
      moodMessage = 2;

      Serial.print ("Mood After: ");
      Serial.println (moodAfter);
      Serial.print ("Company: ");
      Serial.print (Company);
      Serial.println (". Alone");
      Serial.print ("moodMessage: ");
      Serial.print (moodMessage);
      Serial.println (". Hey, your mood has improved a little! Maybe you could invite a friend over for your next meal to improve your mood more?");

      oocsi.newMessage("SietseChannel");
      oocsi.addString("device_id", "d23bdfe56ad2c4227");
      oocsi.addString("Before/After", "After");
      oocsi.addString("Company", "Alone");
      oocsi.addInt ("moodValue", moodAfter);
      oocsi.addInt ("moodMessage", 2);
      oocsi.sendMessage();
      oocsi.check();

      delay (500);
    }

    //Eating Alone and mood has Improved by more than one
    if (Company == false && moodAfter > moodBefore) {
      moodMessage = 3;

      Serial.print ("Mood After: ");
      Serial.println (moodAfter);
      Serial.print ("Company: ");
      Serial.print (Company);
      Serial.println (". Alone");
      Serial.print ("moodMessage: ");
      Serial.print (moodMessage);
      Serial.println (". Hey, your mood has improved a lot, nice! Maybe you could invite a friend over for your next meal to improve your mood even more! :o");

      oocsi.newMessage("SietseChannel");
      oocsi.addString("device_id", "d23bdfe56ad2c4227");
      oocsi.addString("Before/After", "After");
      oocsi.addString("Company", "Alone");
      oocsi.addInt ("moodValue", moodAfter);
      oocsi.addInt ("moodMessage", 3);
      oocsi.sendMessage();
      oocsi.check();

      delay (500);
    }

    //Eating Together and mood is eaqual or has decreased
    if (Company == true && moodAfter < moodBefore) {
      moodMessage = 4;

      Serial.print ("Mood After: ");
      Serial.println (moodAfter);
      Serial.print ("Company: ");
      Serial.print (Company);
      Serial.println (". Together");
      Serial.print ("moodMessage: ");
      Serial.print (moodMessage);
      Serial.println (". Hey, we see that your mood did not improve even when you're accompanied by a friend, why is that?");

      oocsi.newMessage("SietseChannel");
      oocsi.addString("device_id", "d23bdfe56ad2c4227");
      oocsi.addString("Before/After", "After");
      oocsi.addString("Company", "Together");
      oocsi.addInt ("moodValue", moodAfter);
      oocsi.addInt ("moodMessage", 4);
      oocsi.sendMessage();
      oocsi.check();

      delay (500);
    }

    //Eating Together and mood has improved by 1
    if (Company == true && moodAfter == moodBefore) {
      moodMessage = 5;

      Serial.print ("Mood After: ");
      Serial.println (moodAfter);
      Serial.print ("Company: ");
      Serial.print (Company);
      Serial.println (". Together");
      Serial.print ("moodMessage: ");
      Serial.print (moodMessage);
      Serial.println (". Hey, your mood improved a little! How could we improve your mood even more?");

      oocsi.newMessage("SietseChannel");
      oocsi.addString("device_id", "d23bdfe56ad2c4227");
      oocsi.addString("Before/After", "After");
      oocsi.addString("Company", "Together");
      oocsi.addInt ("moodValue", moodAfter);
      oocsi.addInt ("moodMessage", 5);
      oocsi.sendMessage();
      oocsi.check();

      delay (500);
    }

    //Eating Together and mood has Improved by more than one
    if (Company == true && moodAfter > moodBefore) {
      moodMessage = 6;

      Serial.print ("Mood After: ");
      Serial.println (moodAfter);
      Serial.print ("Company: ");
      Serial.print (Company);
      Serial.println (". Together");
      Serial.print ("moodMessage: ");
      Serial.print (moodMessage);
      Serial.println (". Hey, your mood has improved a lot! Nice! How could we improve your mood even more?");

      oocsi.newMessage("SietseChannel");
      oocsi.addString("device_id", "d23bdfe56ad2c4227");
      oocsi.addString("Before/After", "After");
      oocsi.addString("Company", "Together");
      oocsi.addInt ("moodValue", moodAfter);
      oocsi.addInt ("moodMessage", 6);
      oocsi.sendMessage();
      oocsi.check();

      delay (500);
    }
    delay (500);
  }
